import pandas as pd
import pyodbc
from sqlalchemy import create_engine


#VARIABLES DE USO GLOBAL

HOJA1 = 'Red Global de DistribuciÃ³n'
HOJA2 = 'Circuitos'
ulrArchivo = 'C:/Users/scottie jimenez/Desktop/ProjecSIE/ICST_EDEESTE_Diciembre_2022.xlsx'


#Lectura de archivo y creacion de DataFrame

df = pd.read_excel(ulrArchivo, sheet_name=HOJA1, header=15)
ColumnsIDICADOR = df.columns[0]
Valores = [col for col in df.columns if col != ColumnsIDICADOR]
edeColumn = ulrArchivo.split('_')[1] 
base_pivot = pd.melt(df,id_vars=[ColumnsIDICADOR])
base_pivot = pd.melt(df,id_vars=[ColumnsIDICADOR], value_vars = Valores, value_name ='Valor',var_name="Fecha")
Filtrado = base_pivot[base_pivot['Valor'] >= 0.000001]
new_df = Filtrado.assign(Distribuidora=edeColumn)
CreateDataFrame = pd.DataFrame(data=new_df)


#Quitarle los espacios a las columnas
CreateDataFrame.columns = CreateDataFrame.columns.str.replace(' ', '')

#print(CreateDataFrame)
#CREACCION Y LECTURA de CSV PERO YA NO SE NECESITA

#CreateDataFrame2 = []
#for index, row in CreateDataFrame.iterrows():
#    prueba = row.INDICADOR, row.Fecha, row.Valor
#    CreateDataFrame2.append(prueba)
#
#nuevadata = pd.DataFrame(data=CreateDataFrame2)
#nuevadata.to_csv('C:/Users/scottie jimenez/Desktop/ProjecSIE/EDEESTE_Diciembre_2021_nuevo.csv', index=False, sep='|', encoding='utf-8')
#LecturaCSV = pd.read_csv('C:/Users/scottie jimenez/Desktop/ProjecSIE/EDEESTE_Diciembre_2021_nuevo.csv',delimiter='|')


#Coneccion a Base de Datos

SERVER = 'interoperabilidadsie.database.windows.net'
DATABASE = 'InteroperabilidadSIEMinorsta'
USERNAME = 'stidatos'
PASSWORD = 'datossti$@01'
connectionString = f'DRIVER={{SQL Server}};SERVER={SERVER};DATABASE={DATABASE};UID={USERNAME};PWD={PASSWORD}'
conn = pyodbc.connect(connectionString) 
print('Conexion exitosa')
cursor = conn.cursor()



#creaccion del query

for index, row in CreateDataFrame.iterrows():
    SQL_QUERY = f"INSERT INTO Staging.RedGlobalDistribucion (Indicador, Fecha, Valor, Distribuidora) VALUES('{row.INDICADOR}', '{row.Fecha}', {row.Valor}, '{row.Distribuidora}')"
    cursor.execute(SQL_QUERY)
    conn.commit()


cursor.close()
